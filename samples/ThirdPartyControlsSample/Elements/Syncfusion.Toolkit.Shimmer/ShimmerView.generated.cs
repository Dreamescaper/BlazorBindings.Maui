// <auto-generated>
//     This code was generated by a BlazorBindings.Maui component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using BlazorBindings.Core;
using BlazorBindings.Maui.Elements;
using MC = Microsoft.Maui.Controls;
using Microsoft.AspNetCore.Components;
using SMTS = Syncfusion.Maui.Toolkit.Shimmer;
using System.Threading.Tasks;

#pragma warning disable MBB001

namespace BlazorBindings.Maui.Elements.Syncfusion.Toolkit.Shimmer
{
    /// <summary>
    /// Represents a view used to achieve a custom shimmer effect.
    /// </summary>
    public partial class ShimmerView : BlazorBindings.Maui.Elements.Syncfusion.Toolkit.SfView
    {
        static ShimmerView()
        {
            RegisterAdditionalHandlers();
        }

        /// <summary>
        /// Gets or sets the shape for the <see cref="T:Syncfusion.Maui.Toolkit.Shimmer.ShimmerView" />. The default value is <see cref="F:Syncfusion.Maui.Toolkit.Shimmer.ShimmerShapeType.Rectangle" />.
        /// </summary>
        [Parameter] public SMTS.ShimmerShapeType? ShapeType { get; set; }

        public new SMTS.ShimmerView NativeControl => (SMTS.ShimmerView)((BindableObject)this).NativeControl;

        protected override SMTS.ShimmerView CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(ShapeType):
                    if (!Equals(ShapeType, value))
                    {
                        ShapeType = (SMTS.ShimmerShapeType?)value;
                        NativeControl.ShapeType = ShapeType ?? (SMTS.ShimmerShapeType)SMTS.ShimmerView.ShapeTypeProperty.DefaultValue;
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
