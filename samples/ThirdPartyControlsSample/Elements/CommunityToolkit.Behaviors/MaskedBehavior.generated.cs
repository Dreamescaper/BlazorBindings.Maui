// <auto-generated>
//     This code was generated by a BlazorBindings.Maui component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using BlazorBindings.Core;
using BlazorBindings.Maui.Elements;
using CMB = CommunityToolkit.Maui.Behaviors;
using MC = Microsoft.Maui.Controls;
using Microsoft.AspNetCore.Components;
using System.Threading.Tasks;

namespace BlazorBindings.Maui.Elements.CommunityToolkit.Behaviors
{
    public partial class MaskedBehavior : BlazorBindings.Maui.Elements.Behavior
    {
        static MaskedBehavior()
        {
            RegisterAdditionalHandlers();
        }

        [Parameter] public string Mask { get; set; }
        [Parameter] public char? UnmaskedCharacter { get; set; }

        public new CMB.MaskedBehavior NativeControl => (CMB.MaskedBehavior)((BindableObject)this).NativeControl;

        protected override CMB.MaskedBehavior CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(Mask):
                    if (!Equals(Mask, value))
                    {
                        Mask = (string)value;
                        NativeControl.Mask = Mask;
                    }
                    break;
                case nameof(UnmaskedCharacter):
                    if (!Equals(UnmaskedCharacter, value))
                    {
                        UnmaskedCharacter = (char?)value;
                        NativeControl.UnmaskedCharacter = UnmaskedCharacter ?? (char)CMB.MaskedBehavior.UnmaskedCharacterProperty.DefaultValue;
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
