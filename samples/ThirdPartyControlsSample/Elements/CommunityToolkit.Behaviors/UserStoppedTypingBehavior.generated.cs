// <auto-generated>
//     This code was generated by a BlazorBindings.Maui component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using BlazorBindings.Core;
using BlazorBindings.Maui.Elements;
using CMB = CommunityToolkit.Maui.Behaviors;
using MC = Microsoft.Maui.Controls;
using Microsoft.AspNetCore.Components;
using System.Threading.Tasks;

namespace BlazorBindings.Maui.Elements.CommunityToolkit.Behaviors
{
    public partial class UserStoppedTypingBehavior : BlazorBindings.Maui.Elements.Behavior
    {
        static UserStoppedTypingBehavior()
        {
            RegisterAdditionalHandlers();
        }

        [Parameter] public int? MinimumLengthThreshold { get; set; }
        [Parameter] public bool? ShouldDismissKeyboardAutomatically { get; set; }
        [Parameter] public int? StoppedTypingTimeThreshold { get; set; }

        public new CMB.UserStoppedTypingBehavior NativeControl => (CMB.UserStoppedTypingBehavior)((BindableObject)this).NativeControl;

        protected override CMB.UserStoppedTypingBehavior CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(MinimumLengthThreshold):
                    if (!Equals(MinimumLengthThreshold, value))
                    {
                        MinimumLengthThreshold = (int?)value;
                        NativeControl.MinimumLengthThreshold = MinimumLengthThreshold ?? (int)CMB.UserStoppedTypingBehavior.MinimumLengthThresholdProperty.DefaultValue;
                    }
                    break;
                case nameof(ShouldDismissKeyboardAutomatically):
                    if (!Equals(ShouldDismissKeyboardAutomatically, value))
                    {
                        ShouldDismissKeyboardAutomatically = (bool?)value;
                        NativeControl.ShouldDismissKeyboardAutomatically = ShouldDismissKeyboardAutomatically ?? (bool)CMB.UserStoppedTypingBehavior.ShouldDismissKeyboardAutomaticallyProperty.DefaultValue;
                    }
                    break;
                case nameof(StoppedTypingTimeThreshold):
                    if (!Equals(StoppedTypingTimeThreshold, value))
                    {
                        StoppedTypingTimeThreshold = (int?)value;
                        NativeControl.StoppedTypingTimeThreshold = StoppedTypingTimeThreshold ?? (int)CMB.UserStoppedTypingBehavior.StoppedTypingTimeThresholdProperty.DefaultValue;
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
