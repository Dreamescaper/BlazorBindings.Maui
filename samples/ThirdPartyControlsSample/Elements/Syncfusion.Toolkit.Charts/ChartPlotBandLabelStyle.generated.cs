// <auto-generated>
//     This code was generated by a BlazorBindings.Maui component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using BlazorBindings.Core;
using BlazorBindings.Maui.Elements;
using MC = Microsoft.Maui.Controls;
using Microsoft.AspNetCore.Components;
using SMTC = Syncfusion.Maui.Toolkit.Charts;
using System.Threading.Tasks;

#pragma warning disable MBB001

namespace BlazorBindings.Maui.Elements.Syncfusion.Toolkit.Charts
{
    /// <summary>
    /// Represents a LabelStyle class that can be used to customize the plot band labels.
    /// </summary>
    public partial class ChartPlotBandLabelStyle : ChartLabelStyle
    {
        static ChartPlotBandLabelStyle()
        {
            RegisterAdditionalHandlers();
        }

        /// <summary>
        /// Gets or sets a value that indicates the angle rotation of the plot band label text.
        /// </summary>
        /// <value>
        /// It accepts <see cref="T:System.Double" /> values and the default value is 0.
        /// </value>
        [Parameter] public double? Angle { get; set; }
        /// <summary>
        /// Gets or sets the horizontal alignment of the plot band label text.
        /// </summary>
        /// <value>
        /// This property takes the <see cref="T:Syncfusion.Maui.Toolkit.Charts.ChartLabelAlignment" /> as its value. Its default value is Center.
        /// </value>
        [Parameter] public SMTC.ChartLabelAlignment? HorizontalTextAlignment { get; set; }
        /// <summary>
        /// Gets or sets a value to provide horizontal padding to the plot band label text.
        /// </summary>
        /// <value>
        /// It accepts <see cref="T:System.Double" /> values and the default value is 0.
        /// </value>
        [Parameter] public double? OffsetX { get; set; }
        /// <summary>
        /// Gets or sets a value to provide vertical padding to the plot band label text.
        /// </summary>
        /// <value>
        /// It accepts <see cref="T:System.Double" /> values and the default value is 0.
        /// </value>
        [Parameter] public double? OffsetY { get; set; }
        /// <summary>
        /// Gets or sets the vertical alignment of the plot band label text.
        /// </summary>
        /// <value>
        /// This property takes the <see cref="T:Syncfusion.Maui.Toolkit.Charts.ChartLabelAlignment" /> as its value. Its default value is Center.
        /// </value>
        [Parameter] public SMTC.ChartLabelAlignment? VerticalTextAlignment { get; set; }

        public new SMTC.ChartPlotBandLabelStyle NativeControl => (SMTC.ChartPlotBandLabelStyle)((BindableObject)this).NativeControl;

        protected override SMTC.ChartPlotBandLabelStyle CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(Angle):
                    if (!Equals(Angle, value))
                    {
                        Angle = (double?)value;
                        NativeControl.Angle = Angle ?? (double)SMTC.ChartPlotBandLabelStyle.AngleProperty.DefaultValue;
                    }
                    break;
                case nameof(HorizontalTextAlignment):
                    if (!Equals(HorizontalTextAlignment, value))
                    {
                        HorizontalTextAlignment = (SMTC.ChartLabelAlignment?)value;
                        NativeControl.HorizontalTextAlignment = HorizontalTextAlignment ?? (SMTC.ChartLabelAlignment)SMTC.ChartPlotBandLabelStyle.HorizontalTextAlignmentProperty.DefaultValue;
                    }
                    break;
                case nameof(OffsetX):
                    if (!Equals(OffsetX, value))
                    {
                        OffsetX = (double?)value;
                        NativeControl.OffsetX = OffsetX ?? (double)SMTC.ChartPlotBandLabelStyle.OffsetXProperty.DefaultValue;
                    }
                    break;
                case nameof(OffsetY):
                    if (!Equals(OffsetY, value))
                    {
                        OffsetY = (double?)value;
                        NativeControl.OffsetY = OffsetY ?? (double)SMTC.ChartPlotBandLabelStyle.OffsetYProperty.DefaultValue;
                    }
                    break;
                case nameof(VerticalTextAlignment):
                    if (!Equals(VerticalTextAlignment, value))
                    {
                        VerticalTextAlignment = (SMTC.ChartLabelAlignment?)value;
                        NativeControl.VerticalTextAlignment = VerticalTextAlignment ?? (SMTC.ChartLabelAlignment)SMTC.ChartPlotBandLabelStyle.VerticalTextAlignmentProperty.DefaultValue;
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
