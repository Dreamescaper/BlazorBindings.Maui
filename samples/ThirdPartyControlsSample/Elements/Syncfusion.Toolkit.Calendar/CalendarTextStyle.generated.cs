// <auto-generated>
//     This code was generated by a BlazorBindings.Maui component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using BlazorBindings.Core;
using BlazorBindings.Maui.Elements;
using MC = Microsoft.Maui.Controls;
using Microsoft.AspNetCore.Components;
using Microsoft.Maui.Graphics;
using SMTC = Syncfusion.Maui.Toolkit.Calendar;
using System.Threading.Tasks;

#pragma warning disable MBB001

namespace BlazorBindings.Maui.Elements.Syncfusion.Toolkit.Calendar
{
    /// <summary>
    /// Represents a class which is used to customize the text style of the calendar.
    /// </summary>
    public partial class CalendarTextStyle : BlazorBindings.Maui.Elements.Element
    {
        static CalendarTextStyle()
        {
            RegisterAdditionalHandlers();
        }

        /// <summary>
        /// Gets or sets the font attributes of the text style.
        /// </summary>
        /// <value>
        /// The default value of the <see cref="P:Syncfusion.Maui.Toolkit.Calendar.CalendarTextStyle.FontAttributes" /> is <see cref="F:Microsoft.Maui.Controls.FontAttributes.None" />
        /// </value>
        [Parameter] public MC.FontAttributes? FontAttributes { get; set; }
        /// <summary>
        /// Gets or sets a value indicating whether or not the font of the control should scale automatically according to the operating system settings.
        /// </summary>
        /// <value>
        /// It accepts Boolean values, and the default value is false.
        /// </value>
        [Parameter] public bool? FontAutoScalingEnabled { get; set; }
        /// <summary>
        /// Gets or sets the font family of the text style.
        /// </summary>
        [Parameter] public string FontFamily { get; set; }
        /// <summary>
        /// Gets or sets the font size of the text style.
        /// </summary>
        [Parameter] public double? FontSize { get; set; }
        /// <summary>
        /// Gets or sets the text color of the text style.
        /// </summary>
        /// <value>
        /// The default value of the <see cref="P:Syncfusion.Maui.Toolkit.Calendar.CalendarTextStyle.TextColor" /> is "#000000"(black).
        /// </value>
        [Parameter] public Color TextColor { get; set; }

        public new SMTC.CalendarTextStyle NativeControl => (SMTC.CalendarTextStyle)((BindableObject)this).NativeControl;

        protected override SMTC.CalendarTextStyle CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(FontAttributes):
                    if (!Equals(FontAttributes, value))
                    {
                        FontAttributes = (MC.FontAttributes?)value;
                        NativeControl.FontAttributes = FontAttributes ?? (MC.FontAttributes)SMTC.CalendarTextStyle.FontAttributesProperty.DefaultValue;
                    }
                    break;
                case nameof(FontAutoScalingEnabled):
                    if (!Equals(FontAutoScalingEnabled, value))
                    {
                        FontAutoScalingEnabled = (bool?)value;
                        NativeControl.FontAutoScalingEnabled = FontAutoScalingEnabled ?? (bool)SMTC.CalendarTextStyle.FontAutoScalingEnabledProperty.DefaultValue;
                    }
                    break;
                case nameof(FontFamily):
                    if (!Equals(FontFamily, value))
                    {
                        FontFamily = (string)value;
                        NativeControl.FontFamily = FontFamily;
                    }
                    break;
                case nameof(FontSize):
                    if (!Equals(FontSize, value))
                    {
                        FontSize = (double?)value;
                        NativeControl.FontSize = FontSize ?? (double)SMTC.CalendarTextStyle.FontSizeProperty.DefaultValue;
                    }
                    break;
                case nameof(TextColor):
                    if (!Equals(TextColor, value))
                    {
                        TextColor = (Color)value;
                        NativeControl.TextColor = TextColor;
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
