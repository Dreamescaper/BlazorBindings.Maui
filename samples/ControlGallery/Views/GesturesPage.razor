@page "/gestureplayground"

<ContentPage Title="Gestures">
    <StackLayout Margin="new Thickness(20)">

        <Label @ref="panLabel" Text="Tap me or pan me"
               FontSize="40" BackgroundColor="Colors.LightCoral"
               OnTap="OnLabelTapped"
               OnPanUpdate="@OnLabelPanned"
               TranslationX="translation">
        </Label>

        <Label Text="@($"The label above was clicked {count} times")" FontSize="@fontSize" BackgroundColor="Colors.AliceBlue" />

        <Label Text="@($"Swipe left to delete, right to archive [STATE: {swipeState}]")" FontSize="40" BackgroundColor="Colors.AntiqueWhite">
            <SwipeGestureRecognizer Direction="SwipeDirection.Left" OnSwiped="@OnSwipeLabel" />
            <SwipeGestureRecognizer Direction="SwipeDirection.Right" OnSwiped="@OnSwipeLabel" />
        </Label>

        <Label Text="@statusType"/>

    </StackLayout>
</ContentPage>

@code
{
    int count;
    double fontSize = 20;
    string swipeState = "none";
    double translation;
    Label panLabel;

    string statusType;

    void OnLabelTapped()
    {
        count += 1;
    }

    void OnLabelPanned(PanUpdatedEventArgs e)
    {
        statusType = e.StatusType.ToString();
        translation = e.TotalX;
    }

    void OnSwipeLabel(SwipedEventArgs e)
    {
        swipeState = e.Direction switch
        {
            SwipeDirection.Left => "deleted",
            SwipeDirection.Right => "archive",
            _ => "unknown: " + e.Direction.ToString(),
        };
    }
}
