<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup>
    <TargetFrameworks>net6.0;net6.0-android;net6.0-ios;net6.0-maccatalyst;net6.0-windows10.0.19041</TargetFrameworks>
    <UseMaui>true</UseMaui>
    <Title>Experimental Forms binding for Blazor</Title>
    <Description>Experimental Mobile Blazor Bindings enables using Blazor syntax in .razor files to build native apps for iOS and Android.</Description>
    <PackageTags>blazor;mobileblazorbindings</PackageTags>
	<Version>0.7.01-preview-maui</Version>
  </PropertyGroup>

	<PropertyGroup Condition="$(TargetFramework.Contains('-ios')) or $(TargetFramework.Contains('-maccatalyst'))">
		<!--This workaround disables BlazorWebView support for iOS, but at least allows to use native controls only.
		See https://github.com/dotnet/maui/issues/3536-->
		<UsingMicrosoftNETSdkRazor>false</UsingMicrosoftNETSdkRazor>
	</PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudioEng.MicroBuild.Core" Version="0.4.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Microsoft.MobileBlazorBindings.Core\Microsoft.MobileBlazorBindings.Core.csproj" />
  </ItemGroup>

  <ItemGroup>
    <FilesToSign Include="$(OutDir)\Microsoft.MobileBlazorBindings.dll">
      <Authenticode>Microsoft400</Authenticode>
    </FilesToSign>
  </ItemGroup>
</Project>
