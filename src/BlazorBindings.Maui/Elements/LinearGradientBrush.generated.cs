// <auto-generated>
//     This code was generated by a BlazorBindings.Maui component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using BlazorBindings.Core;
using MC = Microsoft.Maui.Controls;
using Microsoft.AspNetCore.Components;
using Microsoft.Maui.Graphics;
using System.Threading.Tasks;

namespace BlazorBindings.Maui.Elements
{
    public partial class LinearGradientBrush : GradientBrush
    {
        static LinearGradientBrush()
        {
            RegisterAdditionalHandlers();
        }

        [Parameter] public Point? EndPoint { get; set; }
        [Parameter] public Point? StartPoint { get; set; }

        public new MC.LinearGradientBrush NativeControl => (MC.LinearGradientBrush)((BindableObject)this).NativeControl;

        protected override MC.LinearGradientBrush CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(EndPoint):
                    if (!Equals(EndPoint, value))
                    {
                        EndPoint = (Point?)value;
                        NativeControl.EndPoint = EndPoint ?? (Point)MC.LinearGradientBrush.EndPointProperty.DefaultValue;
                    }
                    break;
                case nameof(StartPoint):
                    if (!Equals(StartPoint, value))
                    {
                        StartPoint = (Point?)value;
                        NativeControl.StartPoint = StartPoint ?? (Point)MC.LinearGradientBrush.StartPointProperty.DefaultValue;
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
