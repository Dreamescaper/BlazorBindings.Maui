// <auto-generated>
//     This code was generated by a BlazorBindings.Maui component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using BlazorBindings.Core;
using MC = Microsoft.Maui.Controls;
using Microsoft.AspNetCore.Components;
using Microsoft.AspNetCore.Components.Rendering;
using Microsoft.Maui;
using System.Threading.Tasks;

#pragma warning disable MBB001

namespace BlazorBindings.Maui.Elements
{
    public partial class MenuFlyoutSubItem : MenuFlyoutItem
    {
        static MenuFlyoutSubItem()
        {
            RegisterAdditionalHandlers();
        }

        [Parameter] public RenderFragment ChildContent { get; set; }

        public new MC.MenuFlyoutSubItem NativeControl => (MC.MenuFlyoutSubItem)((BindableObject)this).NativeControl;

        protected override MC.MenuFlyoutSubItem CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(ChildContent):
                    ChildContent = (RenderFragment)value;
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        protected override void RenderAdditionalElementContent(RenderTreeBuilder builder, ref int sequence)
        {
            base.RenderAdditionalElementContent(builder, ref sequence);
            RenderTreeBuilderHelper.AddListContentProperty<MC.MenuFlyoutSubItem, IMenuElement>(builder, sequence++, ChildContent, x => x);
        }

        static partial void RegisterAdditionalHandlers();
    }
}
