// <auto-generated>
//     This code was generated by a BlazorBindings.Maui component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using BlazorBindings.Core;
using MC = Microsoft.Maui.Controls;
using Microsoft.AspNetCore.Components;
using System.Threading.Tasks;

namespace BlazorBindings.Maui.Elements
{
    /// <summary>
    /// A <see cref="T:Microsoft.Maui.Controls.TextCell" /> that has an image.
    /// </summary>
    public partial class ImageCell : TextCell
    {
        static ImageCell()
        {
            RegisterAdditionalHandlers();
        }

        /// <summary>
        /// Gets or sets the ImageSource from which the Image is loaded.
        /// </summary>
        [Parameter] public MC.ImageSource ImageSource { get; set; }

        public new MC.ImageCell NativeControl => (MC.ImageCell)((BindableObject)this).NativeControl;

        protected override MC.ImageCell CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(ImageSource):
                    if (!Equals(ImageSource, value))
                    {
                        ImageSource = (MC.ImageSource)value;
                        NativeControl.ImageSource = ImageSource;
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
