// <auto-generated>
//     This code was generated by a BlazorBindings.Maui component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using BlazorBindings.Core;
using BlazorBindings.Maui.Elements;
using MC = Microsoft.Maui.Controls;
using MCS = Microsoft.Maui.Controls.Shapes;
using Microsoft.AspNetCore.Components;
using System.Threading.Tasks;

namespace BlazorBindings.Maui.Elements.Shapes
{
    public partial class Rectangle : Shape
    {
        static Rectangle()
        {
            RegisterAdditionalHandlers();
        }

        [Parameter] public double? RadiusX { get; set; }
        [Parameter] public double? RadiusY { get; set; }

        public new MCS.Rectangle NativeControl => (MCS.Rectangle)((BindableObject)this).NativeControl;

        protected override MCS.Rectangle CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(RadiusX):
                    if (!Equals(RadiusX, value))
                    {
                        RadiusX = (double?)value;
                        NativeControl.RadiusX = RadiusX ?? (double)MCS.Rectangle.RadiusXProperty.DefaultValue;
                    }
                    break;
                case nameof(RadiusY):
                    if (!Equals(RadiusY, value))
                    {
                        RadiusY = (double?)value;
                        NativeControl.RadiusY = RadiusY ?? (double)MCS.Rectangle.RadiusYProperty.DefaultValue;
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
