// <auto-generated>
//     This code was generated by a BlazorBindings.Maui component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using BlazorBindings.Core;
using BlazorBindings.Maui.Elements;
using MC = Microsoft.Maui.Controls;
using MCS = Microsoft.Maui.Controls.Shapes;
using Microsoft.AspNetCore.Components;
using Microsoft.Maui;
using System.Threading.Tasks;

namespace BlazorBindings.Maui.Elements.Shapes
{
    public partial class RoundRectangle : Shape
    {
        static RoundRectangle()
        {
            RegisterAdditionalHandlers();
        }

        [Parameter] public CornerRadius? CornerRadius { get; set; }

        public new MCS.RoundRectangle NativeControl => (MCS.RoundRectangle)((BindableObject)this).NativeControl;

        protected override MCS.RoundRectangle CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(CornerRadius):
                    if (!Equals(CornerRadius, value))
                    {
                        CornerRadius = (CornerRadius?)value;
                        NativeControl.CornerRadius = CornerRadius ?? (CornerRadius)MCS.RoundRectangle.CornerRadiusProperty.DefaultValue;
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
