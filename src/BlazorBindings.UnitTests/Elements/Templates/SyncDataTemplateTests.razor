@using Microsoft.Maui.Controls.Internals;

@inherits ElementTestBase

@code {
    [Test]
    public async Task CreateContentFromDataTemplate()
    {
        var template = await RenderTemplate<int>(i =>
    @<Label>@i - @(i == 1 ? "one" : "many")</Label>);

        var label1 = CreateTemplateRoot<MC.Label>(template, 1);
        var label2 = CreateTemplateRoot<MC.Label>(template, 2);

        Assert.That(label1.Text, Is.EqualTo("1 - one"));
        Assert.That(label2.Text, Is.EqualTo("2 - many"));
    }

    [Test]
    public async Task TemplateContentChangesBasedOnBindingContext()
    {
        var template = await RenderTemplate<int>(i =>
    @<Label>@i - @(i == 1 ? "one" : "many")</Label>);

        var label = CreateTemplateRoot<MC.Label>(template, 1);

        Assert.That(label.Text, Is.EqualTo("1 - one"));

        label.BindingContext = 2;
        StateHasChanged();

        Assert.That(label.Text, Is.EqualTo("2 - many"));
    }

    private async Task<MC.DataTemplate> RenderTemplate<T>(RenderFragment<T> templateFragment)
    {
        var listView = await Render<MC.ListView>(@<ListView T="T" ItemTemplate="templateFragment" />);
        return listView.ItemTemplate;
    }

    private T CreateTemplateRoot<T>(MC.DataTemplate template, object item) where T:MC.BindableObject
    {
        var content = (MC.BindableObject)template.CreateContent(item, null);
        content.BindingContext = item;
        return (T)content;
    }
}
