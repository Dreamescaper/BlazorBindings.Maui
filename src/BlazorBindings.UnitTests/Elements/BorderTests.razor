@using BlazorBindings.Maui.Elements.Shapes

@inherits ElementTestBase

@code {
    [Test]
    public async Task BorderWithStrokeShape()
    {
        var border = await Render<MC.Border>(
    @<Border BackgroundColor="Colors.Olive">
        <StrokeShape>
            <RoundRectangle CornerRadius="7" />
        </StrokeShape>
    </Border>);

        Assert.That(border.BackgroundColor, Is.EqualTo(Colors.Olive));
        Assert.That(border.StrokeShape, Is.TypeOf<MC.Shapes.RoundRectangle>());
        Assert.That(((MC.Shapes.RoundRectangle)border.StrokeShape).CornerRadius, Is.EqualTo((CornerRadius)7));
    }

    [Test]
    public async Task BorderWithCornerRadius()
    {
        var border = await Render<MC.Border>(
            @<Border CornerRadius="new(1,2,3,4)" />);

        Assert.That(border.StrokeShape, Is.TypeOf<MC.Shapes.RoundRectangle>());
        Assert.That(((MC.Shapes.RoundRectangle)border.StrokeShape).CornerRadius, Is.EqualTo(new CornerRadius(1, 2, 3, 4)));
    }

    [Test]
    public async Task BorderWithChildContent()
    {
        var border = await Render<MC.Border>(
    @<Border>
        <Label>BorderTest</Label>
    </Border>);

        var childLabel = border.Content as MC.Label;
        Assert.That(childLabel, Is.Not.Null);
        Assert.That(childLabel.Text, Is.EqualTo("BorderTest"));
    }
}
